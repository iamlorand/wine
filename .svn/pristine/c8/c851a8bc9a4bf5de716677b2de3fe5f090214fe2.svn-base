<?php
/**
* DotBoost Technologies Inc.
* DotKernel Application Framework
*
* @category   DotKernel
* @copyright  Copyright (c) 2009-2015 DotBoost Technologies Inc. (http://www.dotboost.com)
* @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
* @version    $Id: UserView.php 981 2015-06-11 13:51:41Z gabi $
*/

/**
* User View Class
* class that prepare output related to User controller
* @category   DotKernel
* @package    Admin
* @author     DotKernel Team <team@dotkernel.com>
*/

class User_View extends View
{
	/**
	 * Constructor
	 * @access public
	 * @param Dot_Template $tpl
	 */
	public function __construct($tpl)
	{
		$this->tpl = $tpl;
		$this->settings = Zend_Registry::get('settings');
		$this->session = Zend_Registry::get('session');
	}
	/**
	 * List users
	 * @access public
	 * @param string $templateFile
	 * @param array $list
	 * @param int $page
	 * @param bool $ajax - Using ajax, parse only the list content
	 * @return void
	 */
	public function listUser($templateFile, $list, $page)
	{
		$this->tpl->setFile('tpl_main', 'user/' . $templateFile . '.tpl');
		$this->tpl->setBlock('tpl_main', 'list', 'list_block');
		$this->tpl->paginator($list['pages']);
		$this->tpl->addUserToken();
		$this->tpl->setVar('PAGE', $page);
		$this->tpl->setVar('ACTIVE_URL', '/admin/user/activate/');
		foreach ($list['data'] as $k => $v)
		{
			$this->tpl->setVar('ID', $v['id']);
			$this->tpl->setVar('EMAIL', $v['email']);
			if (isset($v['jobPlatformId']))
			{
				$platformNameSubId = $v['jobPlatformName'] . '-' . $v['jobId'];
			}
			elseif (isset($v['jobId']))
			{
				$platformNameSubId = $v['jobId'];
			}
			else 
			{
				$platformNameSubId = '';
			}
			if (isset($v['category']))
			{
				$this->tpl->setVar('CATEGORY', $v['category']);
			}
			else 
			{
				$this->tpl->setVar('CATEGORY', '');
			}
			$this->tpl->setVar('SUB_ID', $v['jobId']);
			$this->tpl->setVar('CITY', $v['city']);
			$this->tpl->setVar('PLATFORM_SUB_ID', $platformNameSubId);
			$this->tpl->setVar('DATE_CREATED', Dot_Kernel::timeFormat($v['dateCreated'], 'long'));
			$this->tpl->setVar('ISACTIVE', $v['isActive']);
			$this->tpl->setVar('ACTIVE_IMG', $v['isActive'] == 1 ? 'active' : 'inactive');
			$this->tpl->parse('list_block', 'list', true);
		}
	}

	/**
	 * List users step 1
	 * @access public
	 * @param string $templateFile
	 * @param array $users
	 * @param int $page
	 * @return void
	 * @author Nicu
	 */
	public function listUserStep1($templateFile, $users, $page)
	{
		$this->tpl->setFile('tpl_main', 'user/' . $templateFile . '.tpl');
		
		$this->tpl->setBlock('tpl_main', 'list_users', 'list_users_block');
		$this->tpl->paginator($users['pages']);
		$this->tpl->addUserToken();
		$this->tpl->setVar('PAGE', $page);
		
		foreach($users['data'] as $key => $value)
		{
			if (isset($value['jobPlatformId']))
			{
				$platformNameSubId = $value['jobPlatformName'] . '-' . $value['jobId'];
			}
			elseif (isset($value['jobId']))
			{
				$platformNameSubId = $value['jobId'];
			}
			else 
			{
				$platformNameSubId = '';
			}
			$this->tpl->setVar('SUB_ID', $value['jobId']);
			$this->tpl->setVar('USER_STEP1_ID', $value['id']);		
			$this->tpl->setVar('USER_STEP1_EMAIL', $value['userEmail']);
			$this->tpl->setVar('USER_STEP1_PLATFORM', $platformNameSubId);			
			$this->tpl->setVar('USER_STEP1_DATE', $value['dateCreated']);
			$this->tpl->parse('list_users_block', 'list_users', true);
		}
	}


	/**
	 * Display user details. It is used for add and update actions
	 * @access public
	 * @param string $templateFile
	 * @param array $data [optional]
	 * @return void
	 */
	public function details($templateFile, $data=array())
	{
		$this->tpl->setFile('tpl_main', 'user/' . $templateFile . '.tpl');
		$this->tpl->setVar('ACTIVE_1', 'checked');
		$this->tpl->addUserToken();
		foreach ($data as $k=>$v)
		{
			$this->tpl->setVar(strtoupper($k), $v);
			if('isActive' == $k)
			{
				$this->tpl->setVar('ACTIVE_'.$v, 'checked');
				$this->tpl->setVar('ACTIVE_'.$v*(-1)+1, '');
			}
		}
		
		//empty because we don't want to show the password
		$this->tpl->setVar('PASSWORD', '');
	}
	/**
	 * Display user logins list
	 * @access public
	 * @param string $templateFile
	 * @param array $list
	 * @param int $page
	 * @param int $browser
	 * @param int $loginDate
	 * @param int $sortField
	 * @param int $orderBy
	 * @return void
	 */
	public function loginsUser($templateFile, $list, $page, $browser, $loginDate, $sortField, $orderBy)
	{
		$dotGeoip = new Dot_Geoip();
		$geoIpWorking = true;
		$this->tpl->setFile('tpl_main', 'user/' . $templateFile . '.tpl');
		$this->tpl->setBlock('tpl_main', 'browser', 'browser_row');
		
		$browserArray = Dot_UserAgent_Utilities::getBrowserArray();
		foreach ($browserArray as $key => $val)
		{
			$this->tpl->setVar('BROWSERNAME', ucfirst($val['uaBrowser']));
			if ( strtolower($val['uaBrowser']) == strtolower($browser) )
			{
				$this->tpl->setVar('BROWSERSEL', 'selected');
			}
			else
			{
				$this->tpl->setVar('BROWSERSEL', '');
			}
			$this->tpl->parse('browser_row', 'browser', true);

		}
		$this->tpl->setVar('FILTERDATE', $loginDate);
		$this->tpl->setBlock('tpl_main', 'list', 'list_block');
		$this->tpl->paginator($list['pages']);
		$this->tpl->setVar('PAGE', $page);
		$this->tpl->setVar('FILTER_URL', '/admin/user/logins');

		$sortableFields = array('username', 'dateLogin');
		foreach ($sortableFields as $field)
		{
			$linkSort = '/admin/user/logins/sort/'.$field.'/order/';
			$linkSort .= ($orderBy == 'asc') ? 'desc' : 'asc';
			$this->tpl->setVar('LINK_SORT_'.strtoupper($field), $linkSort);
			if($field != $sortField)
			{
				$sortClass = 'sortable';
			}
			elseif($orderBy == 'asc')
			{
				$sortClass = 'sort_up';
			}
			else
			{
				$sortClass = 'sort_down';
			}
			$this->tpl->setVar('CLASS_SORT_'.strtoupper($field), $sortClass);
		}

		foreach ($list['data'] as $k => $v)
		{
			$country = $dotGeoip->getCountryByIp($v['ip']);
			if($country['response'] != 'OK' && $geoIpWorking === true)
			{
				$geoIpWorking = false;
				$this->session->message['txt'] = $country['response'];
				$this->session->message['type'] = 'warning';
			}
			$this->tpl->setVar('ID', $v['id']);
			$this->tpl->setVar('USERID', $v['userId']);
			$this->tpl->setVar('EMAIL', $v['email']);
			$this->tpl->setVar('IP', $v['ip']);
			$this->tpl->setVar('COUNTRYIMAGE', strtolower($country[0]));
			$this->tpl->setVar('COUNTRYNAME', $country[1]);
			$this->tpl->setVar('REFERER', $v['referer']);
			$this->tpl->setVar('WHOISURL', $this->settings->whoisUrl);
			$this->tpl->setVar('USERAGENT', $v['userAgent']);
			$this->tpl->setVar('BROWSERIMAGE', Dot_UserAgent_Utilities::getBrowserIcon($v['userAgent']));
			$os = Dot_UserAgent_Utilities::getOsIcon($v['userAgent']);
			$this->tpl->setVar('OSIMAGE', $os['icon']);
			$this->tpl->setVar('OSMAJOR', $os['major']);
			$this->tpl->setVar('OSMINOR', $os['minor']);
			$this->tpl->setVar('DATELOGIN', Dot_Kernel::timeFormat($v['dateLogin'], 'long'));
			$this->tpl->parse('list_block', 'list', true);
		}
	}
	
	/**
	 * Display user details and question survey
	 * @access public
	 * @param string $templateFile
	 * @param array $userData
	 * @param array $surveyAnswer
	 * @param array $data
	 * @param array $questionData
	 * @param array $questionSurvey
	 * @return void
	 */
	public function userDetails($templateFile = '', $userDetails, $userData, $surveyAnswer, $data, $questionData, $questionSurvey, $surveyAnswers)
	{
		if ($templateFile != '') $this->templateFile = $templateFile;//in some cases we need to overwrite this variable
		$this->tpl->setFile('tpl_main', 'user/' . $this->templateFile . '.tpl');
		
		$this->tpl->setBlock('tpl_main', 'user_details', 'user_details_block');
		$this->tpl->setBlock('tpl_main', 'cat_city', 'cat_city_block');
		$this->tpl->setBlock('cat_city', 'question_list', 'question_list_block');
		$this->tpl->setBlock('tpl_main', 'survey', 'survey_block');
		$this->tpl->setBlock('survey', 'survey_answer', 'survey_answer_block');

		if($userData == FALSE)
		{
			$this->tpl->setVar('USER_ID', 	$userDetails['userId']);
			$this->tpl->setVar('USER_EMAIL',$userDetails['email']);
			$this->tpl->setVar('BROWSER_TYPE',$userDetails['userAgent']);
			$this->tpl->setVar('JOB_TYPE', '-');
			$this->tpl->setVar('REFERER_URL', '-');
		}
		else 
		{
			$this->tpl->setVar('USER_ID', 	$userData['userId']);
			$this->tpl->setVar('USER_EMAIL',$userData['email']);
			$this->tpl->setVar('BROWSER_TYPE',$userData['userAgent']);
			$this->tpl->setVar('JOB_TYPE', $userData['jobType']);
			$this->tpl->setVar('REFERER_URL',$userData['referer']);
		}
		
		if($userData['registerType'] == 0)
		{
			$this->tpl->setVar('LOGIN_TYPE', 'Email');
		}
		
		if($userData['registerType'] == 1)
		{
			$this->tpl->setVar('LOGIN_TYPE', 'Facebook login');
		}
		
		if($userData['registerType'] == 2)
		{
			$this->tpl->setVar('LOGIN_TYPE', 'LinkedIn login');
		}
		
		foreach($surveyAnswer as $key => $value)
		{		
			$this->tpl->setVar('USER_QUESTION_DETAILS', $value['question']);
			$this->tpl->setVar('USER_ANSWER_DETAILS', $value['answer']);
			$this->tpl->parse('user_details_block', 'user_details', true);
		}
			
		foreach($questionData as $valueData)
		{
			$this->tpl->setVar('CATEGORY', $valueData['category']);
			$this->tpl->setVar('CITY', $valueData['name']);

			foreach($questionSurvey as $key => $value)
			{
				if($valueData['category'] == $value['categoryName'])
				{
					$this->tpl->setVar('QUESTION', $value['question']);
					$this->tpl->setVar('ANSWER', $value['answer']);
					$this->tpl->parse('question_list_block', 'question_list', true);
				}
			}
			
			$this->tpl->parse('cat_city_block', 'cat_city', true);
			$this->tpl->parse('question_list_block', '');
		}
		
		foreach ($surveyAnswers as $survey)
		{
			$this->tpl->setVar('SURVEY_NAME', $survey['name']);
			foreach ($survey['answers'] as $question => $answer)
			{
				$this->tpl->setVar('SURVEY_QUESTION', $question);
				$this->tpl->setVar('SURVEY_ANSWER', $answer);
				$this->tpl->parse('survey_answer_block', 'survey_answer', true);			
			}
			
			$this->tpl->parse('survey_block', 'survey', true);
			$this->tpl->parse('survey_answer_block', '');
		}
	}
	
	/**
	 * Display user details and categories
	 * @access public
	 * @param string $templateFile
	 * @param array $surveyAnswer
	 * @param array $categories
	 * @return void
	 */
	public function returnUserDetails($surveyAnswer, $categories)
	{
		$values = array();
		foreach($surveyAnswer as $question => $answer)
		{
			foreach ($categories as $categoryName => $questionIds)
			{
				foreach ($questionIds as $id)
				{
					if (in_array($id, $answer))
					{
						array_push($values, $answer);
						unset($surveyAnswer[$question]);
					}
				}
			}
		}
		return $surveyAnswer;
	}
}